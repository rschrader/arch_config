set nocompatible

syntax on                                        " syntaxhighlighting

" basic settings
set relativenumber                               " turn relative line numbers on
set rnu
set ruler                                        " show file stats
set visualbell                                   " no beeping bell
set encoding=utf-8                               " utf-8 encoding
set mouse=a                                      " enable mouse
set langmenu=en_US                               " US language
let $LANG = 'en_US'

" Indent Style
set autoindent	                                 " Auto-indent new lines
set expandtab	                                 " Use spaces instead of tabs
set shiftwidth=4                                 " Number of auto-indent spaces
set smartindent	                                 " Enable smart-indent
set smarttab	                                 " Enable smart-tabs
set softtabstop=4	                         " Number of spaces per Tab

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PLUGINS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" bootstrap vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

" Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" Automatically install missing plugins on startup
if !empty(filter(copy(g:plugs), '!isdirectory(v:val.dir)'))
    autocmd VimEnter * PlugInstall | q
    endif

" Declare the list of plugins.
Plug 'Valloric/YouCompleteMe'
Plug 'vim-airline/vim-airline'
Plug 'dracula/vim', { 'as': 'dracula' } 
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tpope/vim-fugitive'
Plug 'scrooloose/syntastic'
Plug 'kannokanno/previm'
Plug 'tyru/open-browser.vim'
Plug 'airblade/vim-gitgutter'
Plug 'kien/ctrlp.vim'
Plug 'rust-lang/rust.vim'
Plug 'racer-rust/vim-racer'
call plug#end()

" vim airline
let g:airline_powerline_fonts = 1                " use powerline fonts for pretty airline
let g:airline#extensions#tabline#enabled = 1     " enable tabline

" NerdTree
"let NERDTreeQuitOnOpen = 1                       " close nerdtree if it is last open buffer
let NERDTreeAutoDeleteBuffer = 1                 " delete buffer if file gets deleted
let NERDTreeMinimalUI = 1                        " pretty nerd tree
let NERDTreeDirArrows = 1                        " pretty nerd tree
" close nerd tree if its the last buffer in tab
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" start nerdtree if vim is started without parameter
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Color stuff
color dracula
